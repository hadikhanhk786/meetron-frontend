{"version":3,"file":"static/js/22.1306c7c8.chunk.js","mappings":"mJAEe,SAASA,EAASC,GAS7B,IAT8B,WAChCC,EAAU,MACVC,EAAK,gBACLC,EAAe,WACfC,EAAU,oBACVC,EAAmB,kBACnBC,EAAiB,sBACjBC,EAAqB,SACrBC,GACDR,EACC,OACES,EAAAA,EAAAA,MAAA,OAAKC,UAAS,gBAAAC,OACZJ,EACI,sBACA,gFACHK,SAAA,CAGAL,GAAyBD,IACxBG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBE,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8GACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wGAAuGE,SAAA,EACpHC,EAAAA,EAAAA,KAAA,SACEC,UAAQ,EACRC,aAAW,EACXC,IAAKA,IACCA,GAAOV,EAAkBW,SAC3BD,EAAIE,UAAYZ,EAAkBW,SAGtCP,UAAU,6EAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+HAA8HE,SAAA,EAC3IC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAwBS,KAAK,eAAeC,QAAQ,YAAWR,UAC5EC,EAAAA,EAAAA,KAAA,QAAMQ,SAAS,UAAUC,EAAE,iFAAiFC,SAAS,eAEvHd,EAAAA,EAAAA,MAAA,KAAGC,UAAU,8CAA6CE,SAAA,CAAEN,EAAkBE,SAAS,yBAO/FC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,kBAAAC,OAAoBJ,EAAwB,WAAa,IAAKK,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,+JACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0JAAyJE,SAAA,EACtKC,EAAAA,EAAAA,KAAA,SACEG,IAAKf,EACLa,UAAQ,EACRU,OAAK,EACLT,aAAW,EACXL,UAAS,gFAAAC,OAAmFR,EAAmC,GAAjB,mBAEhHU,EAAAA,EAAAA,KAAA,OAAKH,UAAU,4EAA2EE,UACxFC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,mCAAkCE,SAAET,EAAkB,cAAgB,UAEpFC,IAAeD,IACdU,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yFAAwFE,UACrGH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaE,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mGAAkGE,UAC/GC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sCAAsCS,KAAK,eAAeC,QAAQ,YAAWR,UAC1FC,EAAAA,EAAAA,KAAA,QAAMQ,SAAS,UAAUC,EAAE,sDAAsDC,SAAS,iBAG9FV,EAAAA,EAAAA,KAAA,KAAGH,UAAU,wBAAuBE,SAAC,0BAQ9CV,EAAMuB,OAAOC,IAAMnB,GAAyBmB,EAAEC,SAAWtB,GAAqBuB,IAAKC,IAClFpB,EAAAA,EAAAA,MAAA,OAAuBC,UAAS,kBAAAC,OAAoBJ,EAAwB,WAAa,IAAKK,SAAA,EAC5FC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6JACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0JAAyJE,SAAA,EACtKC,EAAAA,EAAAA,KAAA,SACEC,UAAQ,EACRC,aAAW,EACXC,IAAKA,IACCA,GAAOa,EAAKZ,SACdD,EAAIE,UAAYW,EAAKZ,SAGzBP,UAAU,kFAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oGAAmGE,SAAA,EAChHC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,mCAAkCE,SAAEiB,EAAKrB,WACrDqB,EAAKC,UACJjB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAuBS,KAAK,eAAeC,QAAQ,YAAWR,UAC3EC,EAAAA,EAAAA,KAAA,QAAMQ,SAAS,UAAUC,EAAE,8HAA8HC,SAAS,sBAjBlKM,EAAKF,WA0BvB,C","sources":["components/VideoGrid.jsx"],"sourcesContent":["import React from 'react';\n\nexport default function VideoGrid({ \n  localVideo, \n  peers, \n  isScreenSharing, \n  isVideoOff, \n  screenSharingUserId, \n  screenSharingPeer, \n  isRemoteSharingLayout,\n  userName \n}) {\n  return (\n    <div className={`mb-4 sm:mb-8 ${\n      isRemoteSharingLayout \n        ? 'flex flex-col gap-4' \n        : 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3 sm:gap-4'\n    }`}>\n      \n      {/* Screen Sharing View - Large */}\n      {isRemoteSharingLayout && screenSharingPeer && (\n        <div className=\"relative group w-full\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-xl sm:rounded-2xl blur-xl opacity-50\"></div>\n          <div className=\"relative bg-white/10 backdrop-blur-lg rounded-xl sm:rounded-2xl p-1 shadow-2xl border border-white/20\">\n            <video\n              autoPlay\n              playsInline\n              ref={ref => {\n                if (ref && screenSharingPeer.stream) {\n                  ref.srcObject = screenSharingPeer.stream;\n                }\n              }}\n              className=\"w-full rounded-lg sm:rounded-xl object-contain aspect-video bg-gray-900\"\n            />\n            <div className=\"absolute top-2 sm:top-4 left-2 sm:left-4 bg-black/40 backdrop-blur-md px-2 sm:px-3 py-1 rounded-full flex items-center gap-2\">\n              <svg className=\"w-4 h-4 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v8a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm1 1v6h12V5H4z\" clipRule=\"evenodd\" />\n              </svg>\n              <p className=\"text-white text-xs sm:text-sm font-semibold\">{screenSharingPeer.userName}'s Screen</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Local Video */}\n      <div className={`relative group ${isRemoteSharingLayout ? 'max-w-xs' : ''}`}>\n        <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500 to-purple-500 rounded-xl sm:rounded-2xl blur-xl opacity-50 group-hover:opacity-75 transition duration-300\"></div>\n        <div className=\"relative bg-white/10 backdrop-blur-lg rounded-xl sm:rounded-2xl p-1 shadow-2xl border border-white/20 transform hover:scale-105 transition duration-300\">\n          <video\n            ref={localVideo}\n            autoPlay\n            muted\n            playsInline\n            className={`w-full h-full rounded-lg sm:rounded-xl object-cover aspect-video bg-gray-900 ${!isScreenSharing ? 'scale-x-[-1]' : ''}`}\n          />\n          <div className=\"absolute top-2 left-2 bg-black/40 backdrop-blur-md px-2 py-1 rounded-full\">\n            <p className=\"text-white text-xs font-semibold\">{isScreenSharing ? 'Your Screen' : 'You'}</p>\n          </div>\n          {isVideoOff && !isScreenSharing && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 rounded-lg sm:rounded-xl\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 sm:w-16 sm:h-16 bg-white/10 rounded-full flex items-center justify-center mx-auto mb-2\">\n                  <svg className=\"w-6 h-6 sm:w-8 sm:h-8 text-white/60\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <p className=\"text-white/60 text-xs\">Camera Off</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Remote Videos */}\n      {peers.filter(p => !isRemoteSharingLayout || p.peerID !== screenSharingUserId).map((peer) => (\n        <div key={peer.peerID} className={`relative group ${isRemoteSharingLayout ? 'max-w-xs' : ''}`}>\n          <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-xl sm:rounded-2xl blur-xl opacity-50 group-hover:opacity-75 transition duration-300\"></div>\n          <div className=\"relative bg-white/10 backdrop-blur-lg rounded-xl sm:rounded-2xl p-1 shadow-2xl border border-white/20 transform hover:scale-105 transition duration-300\">\n            <video\n              autoPlay\n              playsInline\n              ref={ref => {\n                if (ref && peer.stream) {\n                  ref.srcObject = peer.stream;\n                }\n              }}\n              className=\"w-full h-full rounded-lg sm:rounded-xl object-cover aspect-video bg-gray-900\"\n            />\n            <div className=\"absolute top-2 left-2 bg-black/40 backdrop-blur-md px-2 py-1 rounded-full flex items-center gap-2\">\n              <p className=\"text-white text-xs font-semibold\">{peer.userName}</p>\n              {peer.isMuted && (\n                <svg className=\"w-3 h-3 text-red-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"names":["VideoGrid","_ref","localVideo","peers","isScreenSharing","isVideoOff","screenSharingUserId","screenSharingPeer","isRemoteSharingLayout","userName","_jsxs","className","concat","children","_jsx","autoPlay","playsInline","ref","stream","srcObject","fill","viewBox","fillRule","d","clipRule","muted","filter","p","peerID","map","peer","isMuted"],"sourceRoot":""}